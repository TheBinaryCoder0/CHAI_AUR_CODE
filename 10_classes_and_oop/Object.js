// JS MEIN PROTOTYPAL INHERITANCE HOTA HAI
// AGAR AAPNE KOI VALUE SEARCH KI, TOH WOH TAB TAK DHUNDEGA JAB TAK USKO null NAHI MIL JAATA HAI
// IT WILL SEARCH ITS PARENT, GRANDPARENTS, etc
// HERE, OBJECT IS THE END OF THE WORLD (LIKE IN WINDOWS => C DRIVE OR IN LINUX => /)

function mutiplyBy5(num){
    return num*5
}

// mutiplyBy5(5)

mutiplyBy5.power = 2;

console.log(mutiplyBy5(5));
console.log(mutiplyBy5.power);
console.log(mutiplyBy5.prototype); // YEH KEWAL METHODS NAHI, KUCH INTERNAL PROPERTIES BHI DETA HAI
                                   // FUNCTION KI BHI TOH KUCH PROPERTY HOGI

// NOW AFTER SEEING THIS WE CAN SAY THAT EVERYTHING IN JS IS AN OBJECT
// function => FUNCTION BHI HAI AUR OBJECT BHI HAI
// FUNCTION KI JOH FUNCTIONALITY HAI WOH FUNCTION KI TARAH BEHAVE KARTI HAI
// LEKIN AGAR HAM CHAHE TOH KISI KO EK OBJECT KI TARAH BHI BEHAVE KARA SAKTE HAI

// OBJECT KA JOH PROTOTYPE HAI WOH ACTUAL MEIN null HI HO JAATA HAI
// WAISE GETTER AUR SETTER AVAILABLE HOTE HAI, HAM CHAHE TOH AUR BHI REFERENCE DAAL SAKTE HAI, LEKIN NAHI DAALTE HAI HAM USUALLY

function createUser(username, price){
    this.username = username
    this.price = price
}

createUser.prototype.increment = function(){
    this.price++
}

// this KA MATLAB HAI => JISNE BHI BULAYA HAI USKE PAAS JAAO

createUser.prototype.printMe = function(){
    console.log(`Price is ${this.score}`)
}

const chai = new createUser("chai",25) // AB HAME YAHA BATANA PADEGA KI MERE PAAS ADDITIONAL PROPERTIES AAYI HAI (SO USE new KEYWORD)
const tea = new createUser("tea",250)

chai.printMe();
tea.printMe();

// JS CLASSES KE THROUGH CONSTRUCTOR FUNCTION NAHI DETI HAI
// JS new KEYWORD KE THROUGH CONSTRUCTOR FUNCTION DETI HAI

/*

HERE'S WHAT HAPPENS BEHIND THE SCENES WHEN THE new KEYWORD IS USED:

A NEW OBJECT IS CREATED: THE new KEYWORD INITIATES THE CREATION OF A NEW JAVASCRIPT OBJECT.

A PROTOTYPE IS LINKED: THE NEWLY CREATED OBJECT GETS LINKED TO THE PROTOTYPE PROPERTY
OF THE CONSTRUCTOR FUNCTION. THIS MEANS THAT IT HAS ACCESS TO PROPERTIES AND METHODS DEFINED 
ON THE CONSTRUCTOR'S PROTOTYPE.

THE CONSTRUCTOR IS CALLED: THE CONSTRUCTOR FUNTION IS CALLED WITH THE SPECIFIED 
ARGUMENTS AND THIS IS BOUND TO THE NEWLY CREATED OBJECT. IF NO EXPLICIT RETURN VALUE
IS SPECIFIED FROM THE CONSTRUCTOR, JAVASCRIPT ASSUMES this,
THE NEWLY CREATED OBJECT, TO BE THE INTENDED RETURN VALUE.

THE new OBJECT IS RETURNED: AFTER THE CONSTRUCTOR FUNCTION HAS BEEN CALLED, 
IF IT DOESN'T RETURN A NON-PRIMITIVE VALUE (object, array, function, etc.), 
THE NEWLY CREATED OBJECT IS RETURNED.
*/



